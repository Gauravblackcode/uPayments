{"ast":null,"code":"import { updateSnackbarState } from '../redux/actions/actions';\nimport store from '../redux/store';\nimport { severityValues } from '../hooks/useSnackbar';\nimport { getData } from './asyncKeyStorage';\n\nconst showMessage = (type, message) => {\n  store.dispatch(updateSnackbarState({\n    severity: type,\n    show: true,\n    message: message || 'Network error'\n  }));\n};\n\nconst showErrorMessage = message => {\n  const tempMessage = typeof message === 'string' ? message : 'Network Error';\n  showMessage(severityValues.ERROR, tempMessage);\n};\n\nconst showSuccessMessage = message => {\n  const tempMessage = typeof message === 'string' ? message : 'Success';\n  showMessage(severityValues.SUCCESS, tempMessage);\n};\n\nconst isLoggedIn = () => {\n  // for tesstinga nd auth is no required , return by default tru\n  return true; // const token = getData('accessToken')\n  // return token ? true : false\n};\n\nconst showLoadingIndicator = () => {\n  const loaderEl = document.getElementById('loader');\n  if (loaderEl) loaderEl.style.display = 'flex';\n};\n\nconst hideLoadingIndicator = () => {\n  const loaderEl = document.getElementById('loader');\n  if (loaderEl) loaderEl.style.display = 'none';\n};\n\nconst truncateText = (str, length) => {\n  return (str === null || str === void 0 ? void 0 : str.length) >= length ? str.substring(0, length) + '...' : str;\n};\n\nexport { showErrorMessage, showSuccessMessage, isLoggedIn, showLoadingIndicator, hideLoadingIndicator, truncateText };","map":{"version":3,"names":["updateSnackbarState","store","severityValues","getData","showMessage","type","message","dispatch","severity","show","showErrorMessage","tempMessage","ERROR","showSuccessMessage","SUCCESS","isLoggedIn","showLoadingIndicator","loaderEl","document","getElementById","style","display","hideLoadingIndicator","truncateText","str","length","substring"],"sources":["/home/mark/Desktop/uPayments/src/utils/utils.js"],"sourcesContent":["import { updateSnackbarState } from '../redux/actions/actions'\r\nimport store from '../redux/store'\r\nimport { severityValues } from '../hooks/useSnackbar'\r\nimport { getData } from './asyncKeyStorage'\r\n\r\nconst showMessage = (type, message) => {\r\n  store.dispatch(\r\n    updateSnackbarState({\r\n      severity: type,\r\n      show: true,\r\n      message: message || 'Network error'\r\n    })\r\n  )\r\n}\r\n\r\nconst showErrorMessage = (message) => {\r\n  const tempMessage = typeof message === 'string' ? message : 'Network Error'\r\n  showMessage(severityValues.ERROR, tempMessage)\r\n}\r\n\r\nconst showSuccessMessage = (message) => {\r\n  const tempMessage = typeof message === 'string' ? message : 'Success'\r\n  showMessage(severityValues.SUCCESS, tempMessage)\r\n}\r\n\r\nconst isLoggedIn = () => {\r\n  // for tesstinga nd auth is no required , return by default tru\r\n  return true\r\n  // const token = getData('accessToken')\r\n  // return token ? true : false\r\n}\r\n\r\nconst showLoadingIndicator = () => {\r\n  const loaderEl = document.getElementById('loader')\r\n  if (loaderEl) loaderEl.style.display = 'flex'\r\n}\r\n\r\nconst hideLoadingIndicator = () => {\r\n  const loaderEl = document.getElementById('loader')\r\n  if (loaderEl) loaderEl.style.display = 'none'\r\n}\r\n\r\nconst truncateText = (str, length) => {  \r\n  return  str?.length >= length ? str.substring(0,length) +   '...' : str;\r\n}\r\nexport {\r\n  showErrorMessage,\r\n  showSuccessMessage,\r\n  isLoggedIn,\r\n  showLoadingIndicator,\r\n  hideLoadingIndicator,\r\n  truncateText\r\n}\r\n"],"mappings":"AAAA,SAASA,mBAAT,QAAoC,0BAApC;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,SAASC,cAAT,QAA+B,sBAA/B;AACA,SAASC,OAAT,QAAwB,mBAAxB;;AAEA,MAAMC,WAAW,GAAG,CAACC,IAAD,EAAOC,OAAP,KAAmB;EACrCL,KAAK,CAACM,QAAN,CACEP,mBAAmB,CAAC;IAClBQ,QAAQ,EAAEH,IADQ;IAElBI,IAAI,EAAE,IAFY;IAGlBH,OAAO,EAAEA,OAAO,IAAI;EAHF,CAAD,CADrB;AAOD,CARD;;AAUA,MAAMI,gBAAgB,GAAIJ,OAAD,IAAa;EACpC,MAAMK,WAAW,GAAG,OAAOL,OAAP,KAAmB,QAAnB,GAA8BA,OAA9B,GAAwC,eAA5D;EACAF,WAAW,CAACF,cAAc,CAACU,KAAhB,EAAuBD,WAAvB,CAAX;AACD,CAHD;;AAKA,MAAME,kBAAkB,GAAIP,OAAD,IAAa;EACtC,MAAMK,WAAW,GAAG,OAAOL,OAAP,KAAmB,QAAnB,GAA8BA,OAA9B,GAAwC,SAA5D;EACAF,WAAW,CAACF,cAAc,CAACY,OAAhB,EAAyBH,WAAzB,CAAX;AACD,CAHD;;AAKA,MAAMI,UAAU,GAAG,MAAM;EACvB;EACA,OAAO,IAAP,CAFuB,CAGvB;EACA;AACD,CALD;;AAOA,MAAMC,oBAAoB,GAAG,MAAM;EACjC,MAAMC,QAAQ,GAAGC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAjB;EACA,IAAIF,QAAJ,EAAcA,QAAQ,CAACG,KAAT,CAAeC,OAAf,GAAyB,MAAzB;AACf,CAHD;;AAKA,MAAMC,oBAAoB,GAAG,MAAM;EACjC,MAAML,QAAQ,GAAGC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAjB;EACA,IAAIF,QAAJ,EAAcA,QAAQ,CAACG,KAAT,CAAeC,OAAf,GAAyB,MAAzB;AACf,CAHD;;AAKA,MAAME,YAAY,GAAG,CAACC,GAAD,EAAMC,MAAN,KAAiB;EACpC,OAAQ,CAAAD,GAAG,SAAH,IAAAA,GAAG,WAAH,YAAAA,GAAG,CAAEC,MAAL,KAAeA,MAAf,GAAwBD,GAAG,CAACE,SAAJ,CAAc,CAAd,EAAgBD,MAAhB,IAA4B,KAApD,GAA4DD,GAApE;AACD,CAFD;;AAGA,SACEd,gBADF,EAEEG,kBAFF,EAGEE,UAHF,EAIEC,oBAJF,EAKEM,oBALF,EAMEC,YANF"},"metadata":{},"sourceType":"module"}